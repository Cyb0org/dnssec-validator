.PHONY: all submodules libs-build plugin prepmake

all: libs-build plugin

CFLAGS=-fPIC
export CFLAGS

LIBS_SOURCE = libs-source
OPENSSL_TARBALL = $(LIBS_SOURCE)/openssl-1.0.1c.tar.gz
LDNS_TARBALL = $(LIBS_SOURCE)/ldns-1.6.15.tar.gz
UNBOUND_TARBALL = $(LIBS_SOURCE)/unbound-1.4.18.tar.gz

BASEDIR := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))

OPENSSL_DIR := $(BASEDIR)/libs/openssl-1.0.1c
LDNS_DIR := $(BASEDIR)/libs/ldns-1.6.15
UNBOUND_DIR := $(BASEDIR)/libs/unbound-1.4.18

OPENSSL_LIB := $(BASEDIR)/libs/openssl
LDNS_LIB := $(BASEDIR)/libs/ldns
UNBOUND_LIB := $(BASEDIR)/libs/unbound

FIREBREATH_DIR := $(BASEDIR)/FireBreath
FIREBREATH_TAG := firebreath-1.6.0

PLUGIN_SOURCE_DIR := $(BASEDIR)/plugin-source/DNSSECValidatorPlugin
PLUGIN_BUILD_DIR := $(FIREBREATH_DIR)/build
# PLUGIN_JSAPI_IDL_DIR := $(PLUGIN_SOURCE_DIR)/JSAPI_IDL


# Different NPAPI plugin names based on OS
# PLUGIN_BINARY_TREE is necessary because Mac has dirtree structure instead of
# a single file.
ifeq ($(TARGET_OS),LINUX)
    PLUGIN_BINARY := $(PLUGIN_BUILD_DIR)/bin/DNSSECValidatorPlugin/npDNSSECValidatorPlugin.so
    PLUGIN_BINARY_DEBUG := $(PLUGIN_BUILD_DIR)/bin/DNSSECValidatorPlugin/npDNSSECValidatorPlugin.so.debug
    PLUGIN_BINARY_TREE := $(PLUGIN_BINARY)
    # FireBreath/cmake has no equivalent to autoconf's --target=... except for
    # CMAKE_OSX_ARCHITECTURES (which works obviously only on Mac).
    # So, yay! Another workaround.
    # Note in case it ever becomes necessary: linker has --format flag to
    # explicitly specify library format, e.g. when passed through gcc:
    # gcc ... -Wl,--format=elf32-i386 ...
    # There are also two undocumented CMake variables:
    # CMAKE_MODULE_LINKER_FLAGS and CMAKE_SHARED_LINKER_FLAGS
    FIREBREATH_CMAKE_FLAGS := -DCMAKE_CXX_FLAGS="$(LIB_CFLAGS)"
endif
ifeq ($(TARGET_OS),MAC)
    # there is one more FireBreath's prepmake param that might be useful for
    # compatibility:
    # -D CMAKE_OSX_DEPLOYMENT_TARGET=10.6 - Set the desired target version of
    #  Mac OS X
    PLUGIN_BINARY := $(PLUGIN_BUILD_DIR)/projects/DNSSECValidatorPlugin/DNSSECValidatorPlugin.plugin/Contents/MacOS/DNSSECValidatorPlugin
    PLUGIN_BINARY_DEBUG := $(PLUGIN_BUILD_DIR)/projects/DNSSECValidatorPlugin/DNSSECValidatorPlugin.dSYM
    PLUGIN_BINARY_TREE := $(PLUGIN_BUILD_DIR)/projects/DNSSECValidatorPlugin/DNSSECValidatorPlugin.plugin
endif
ifeq ($(TARGET_OS),WINDOWS)
    PLUGIN_BINARY := $(PLUGIN_BUILD_DIR)/bin/DNSSECValidatorPlugin/npDNSSECValidatorPlugin.dll
    PLUGIN_BINARY_DEBUG := $(PLUGIN_BUILD_DIR)/bin/DNSSECValidatorPlugin/npDNSSECValidatorPlugin.dll.debug
    PLUGIN_BINARY_TREE := $(PLUGIN_BINARY)
endif

## uncomment to make plugin build verbose - shows gcc invocations etc.
#PLUGIN_VERBOSE_BUILD = VERBOSE=1

## Configuration is one of Debug, Release, MinSizeRel and RelWithDebInfo.
## You need to run 'make prepmake' after changing.
PLUGIN_CONFIGURATION ?= RelWithDebInfo

libs-build: submodules libs $(OPENSSL_LIB) $(LDNS_LIB) $(UNBOUND_LIB)

submodules:
	git clone git://git.nic.cz/dane-libs $(LIBS_SOURCE)
	git clone https://github.com/firebreath/FireBreath.git FireBreath
	git submodule update --init --recursive
	#(cd $(FIREBREATH_DIR) && git checkout $(FIREBREATH_TAG))

libs:
	mkdir libs

## openssl
$(OPENSSL_LIB): $(OPENSSL_DIR)
	(cd $< && ./Configure no-shared no-krb5 --prefix=$@ $(OPENSSL_ARGS) && make -j1 && make -j1 install)

$(OPENSSL_DIR): $(OPENSSL_TARBALL)
	tar xzf $< -C libs

## ldns
$(LDNS_LIB): $(LDNS_DIR) $(OPENSSL_LIB)
	(cd $< && \
	    CFLAGS="$(LIB_CFLAGS)" ./configure --disable-shared --with-ssl=$(OPENSSL_LIB) \
	    --with-pic --prefix=$@ $(CONFIGURE_ARGS) && \
	    make && \
	    make install)

$(LDNS_DIR): $(LDNS_TARBALL)
	tar xzf $< -C libs

## unbound
$(UNBOUND_LIB): $(UNBOUND_DIR) $(LDNS_LIB) $(OPENSSL_LIB)
	(cd $< && \
	    CFLAGS="$(LIB_CFLAGS)" ./configure --disable-shared \
	    --with-ssl=$(OPENSSL_LIB) --with-ldns=$(LDNS_LIB) --without-libevent \
	    --with-pic --prefix=$@ $(CONFIGURE_ARGS) && \
	    make && \
	    make install)

$(UNBOUND_DIR): $(UNBOUND_TARBALL)
	tar xzf $< -C libs

## plugin

# Makefile would complain about circular dependency here
ifeq ($(TARGET_OS),MAC)
$(PLUGIN_BINARY_TREE): $(PLUGIN_BINARY)
	touch $@
endif

$(PLUGIN_BINARY): plugin

plugin: $(PLUGIN_BUILD_DIR) $(UNBOUND_LIB)
	make $(PLUGIN_VERBOSE_BUILD) -C $<

prepmake: $(FIREBREATH_DIR)/prepmake.sh $(PLUGIN_SOURCE_DIR) $(FIREBREATH_CMAKE_FLAGS)

$(PLUGIN_BUILD_DIR): $(PLUGIN_SOURCE_DIR)/CMakeLists.txt $(PLUGIN_SOURCE_DIR)/PluginConfig.cmake \
		$(PLUGIN_SOURCE_DIR)/X11/projectDef.cmake $(PLUGIN_SOURCE_DIR)/Mac/projectDef.cmake $(PLUGIN_SOURCE_DIR)/Win/projectDef.cmake \
		#dependencies end
		CMAKE_OSX_ARCHITECTURES="$(CMAKE_OSX_ARCHITECTURES)" make -f Makefile.main prepmake

# final 'touch' is to keep Makefile time depedencies
$(PLUGIN_BINARY_DEBUG): $(PLUGIN_BINARY_TREE)
ifeq ($(TARGET_OS),LINUX)
	objcopy --only-keep-debug $(PLUGIN_BINARY) $@
	strip $<
	objcopy --add-gnu-debuglink=$@ $(PLUGIN_BINARY)
endif
ifeq ($(TARGET_OS),MAC)
	dsymutil $(PLUGIN_BINARY) -o $@
	strip -S $(PLUGIN_BINARY)
endif
	touch $@

clean:
	rm -rf libs
	rm -rf FireBreath
	rm -rf $(LIBS_SOURCE)
	rm -rf CMakeCache.txt CMakeFiles/ cmake_install.cmake
