.PHONY: all clean download-git-firebreath scour plugin

all: download-git-firebreath plugin

CFLAGS=-fPIC
export CFLAGS

# Sets location variables.
include Makefile.layout

# Different NPAPI plugin names based on OS
# PLUGIN_BINARY_TREE is necessary because Mac has dirtree structure instead of
# a single file.
MAKE_CMD ?= make
UNIXOID ?= UNIX
UNIXOID_LC ?= unix
ifeq ($(OS_TARGET),UNIX)
  MAKE_OS := Makefile.unix
  ifeq ($(BUILD_64BIT),1)
    ARCH := sys_$(UNIXOID_LC)_x64
    XPI := xpi_x64
  else
    ARCH := sys_$(UNIXOID_LC)_x86
    XPI := xpi_x86
  endif
endif
ifeq ($(OS_TARGET),MAC)
  MAKE_OS := Makefile.mac
  ifeq ($(BUILD_MAC96),1)
    ARCH := sys_macosx
    XPI := xpi
  else	
    ifeq ($(BUILD_64BIT),1)
      ARCH := sys_macosx_x64
      XPI := xpi_x64
    else 
      ARCH := sys_macosx_x86
      XPI := xpi_x86
    endif 
  endif 
endif
ifeq ($(OS_TARGET),WINDOWS)
  MAKE_OS := Makefile.win
  ARCH := sys_windows_x86
  XPI := xpi_x86
endif

## uncomment to make plug-in build verbose - shows gcc invocations etc.
#PLUGIN_VERBOSE_BUILD = VERBOSE=1

## Configuration is one of Debug, Release, MinSizeRel and RelWithDebInfo.
## You need to run 'make prepmake' after changing.
PLUGIN_CONFIGURATION ?= MinSizeRel

download-git-firebreath:
	rm -rf $(FIREBREATH_DIR)
	git clone https://github.com/firebreath/FireBreath.git $(FIREBREATH_DIR)
	cd $(FIREBREATH_DIR); git reset --hard 66af0df36be98e9fcf7ee196fe5c275e54752ae8; cd .. # 2014-06-24 17:48:14
	#git reset --hard origin/master
	cd ..
	git submodule update --init --recursive
	#(cd $(FIREBREATH_DIR) && git checkout $(FIREBREATH_TAG))

# Build the plug-in.
plugin:
	$(MAKE_CMD) -f Makefile.static_libs CONFIGURE_ARGS=$(CONFIGURE_ARGS) STATIC_LINKING=$(STATIC_LINKING)
	$(MAKE_CMD) -f $(MAKE_OS) UNIXOID=$(UNIXOID) UNIXOID_LC=$(UNIXOID_LC) MAKE_CMD=$(MAKE_CMD) INCLUDE_LOC=$(INCLUDE_LOC) LIBRARY_LOC=$(LIBRARY_LOC) STATIC_LINKING=$(STATIC_LINKING) $(ARCH)
	$(MAKE_CMD) -f $(MAKE_OS) UNIXOID=$(UNIXOID) UNIXOID_LC=$(UNIXOID_LC) MAKE_CMD=$(MAKE_CMD) INCLUDE_LOC=$(INCLUDE_LOC) LIBRARY_LOC=$(LIBRARY_LOC) $(XPI)

# Cleans built files.
clean:
	$(MAKE_CMD) -f Makefile.static_libs clean-static-libs
	rm -rf $(FIREBREATH_DIR)
	rm -rf CMakeCache.txt CMakeFiles/ cmake_install.cmake

# Cleans even more.
scour: clean
	$(MAKE_CMD) -f Makefile.static_libs scour-static-libs
